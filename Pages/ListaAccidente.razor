@page "/lista-accidentes"
@inject IJSRuntime JSRuntime

<h3>Registro de Accidentes de Tránsito</h3>

<EditForm Model="@accidente" OnValidSubmit="GuardarAccidente">
    <!-- El formulario existente aquí -->
</EditForm>

<h4 class="mt-4">Accidentes Registrados</h4>

@if (listaAccidentes.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>Fecha</th>
                <th>Descripción</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var acc in listaAccidentes)
            {
                <tr>
                    <td>@acc.Fecha.ToShortDateString()</td>
                    <td>@(acc.Descripcion?.Length > 50 ? acc.Descripcion.Substring(0, 47) + "..." : acc.Descripcion)</td>
                    <td>
                        <button class="btn btn-info btn-sm" @onclick="() => VerDetalles(acc)">Ver Detalles</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No hay accidentes registrados.</p>
}

@if (accidenteSeleccionado != null)
{
    <div class="modal" tabindex="-1" style="display:block" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Detalles del Accidente</h5>
                    <button type="button" class="close" @onclick="CerrarDetalles">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p><strong>Fecha:</strong> @accidenteSeleccionado.Fecha.ToShortDateString()</p>
                    <p><strong>Descripción:</strong> @accidenteSeleccionado.Descripcion</p>
                    <p><strong>Costo Económico:</strong> @accidenteSeleccionado.CostoEconomico.ToString("C")</p>
                    <p><strong>Número de Muertos:</strong> @accidenteSeleccionado.NumeroMuertos</p>
                    <p><strong>Número de Heridos:</strong> @accidenteSeleccionado.NumeroHeridos</p>
                    <p><strong>Cantidad de Vehículos:</strong> @accidenteSeleccionado.CantidadVehiculos</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="CerrarDetalles">Cerrar</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private Accidente accidente = new Accidente();
    private List<Accidente> listaAccidentes = new List<Accidente>();
    private Accidente accidenteSeleccionado;

    protected override async Task OnInitializedAsync()
    {
        await CargarAccidentes();
    }

    private async Task GuardarAccidente()
    {
        listaAccidentes.Add(accidente);
        await GuardarEnLocalStorage();
        accidente = new Accidente();
        StateHasChanged();
    }

    private async Task CargarAccidentes()
    {
        var accidentesJson = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "accidentes");
        if (!string.IsNullOrEmpty(accidentesJson))
        {
            listaAccidentes = System.Text.Json.JsonSerializer.Deserialize<List<Accidente>>(accidentesJson);
        }
    }

    private async Task GuardarEnLocalStorage()
    {
        var accidentesJson = System.Text.Json.JsonSerializer.Serialize(listaAccidentes);
        await JSRuntime.InvokeVoidAsync("localStorage.setItem", "accidentes", accidentesJson);
    }

    private void VerDetalles(Accidente acc)
    {
        accidenteSeleccionado = acc;
    }

    private void CerrarDetalles()
    {
        accidenteSeleccionado = null;
    }

    public class Accidente
    {
        public DateTime Fecha { get; set; } = DateTime.Now;
        public string Descripcion { get; set; }
        public decimal CostoEconomico { get; set; }
        public int NumeroMuertos { get; set; }
        public int NumeroHeridos { get; set; }
        public int CantidadVehiculos { get; set; }
    }
}